{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ver",
				"vertex_buffers"
			],
			[
				"fnc",
				"function"
			],
			[
				"vertex",
				"vertex_buffers"
			],
			[
				"out",
				"out_file"
			],
			[
				"fil",
				"file_name"
			],
			[
				"sr",
				"src_dir"
			],
			[
				"src",
				"src_file"
			],
			[
				"read",
				"read_state"
			],
			[
				"bui",
				"build_dir"
			],
			[
				"inc",
				"include_file"
			],
			[
				"set_",
				"set_pixels"
			],
			[
				"p",
				"print_hi"
			],
			[
				"c",
				"container"
			],
			[
				"on",
				"onyx_instance"
			],
			[
				"cons",
				"constructor	keyword"
			],
			[
				"view",
				"view_height"
			],
			[
				"SH",
				"SHADER_SRC"
			],
			[
				"ONYX",
				"ONYX_OUT"
			],
			[
				"ON",
				"ONYX_SRC"
			],
			[
				"nu",
				"number	keyword"
			],
			[
				"Uint",
				"Uint8Array	interface"
			],
			[
				"dest",
				"dest_file"
			],
			[
				"fi",
				"filetype"
			],
			[
				"un",
				"uniforms"
			],
			[
				"tex",
				"texture2"
			],
			[
				"te",
				"texture2D"
			],
			[
				"other_",
				"other_pixels"
			],
			[
				"new",
				"new_texture"
			],
			[
				"sc",
				"scene_material"
			],
			[
				"tim",
				"time_start"
			],
			[
				"ac",
				"active_material"
			],
			[
				"use",
				"use_material"
			],
			[
				"frame",
				"frame_material"
			],
			[
				"set",
				"set_material_texture"
			],
			[
				"fra",
				"frag_src"
			],
			[
				"DE",
				"DEPTH_ATTACHMENT"
			],
			[
				"RB",
				"RGBA"
			],
			[
				"in",
				"index_buffer"
			],
			[
				"index",
				"index_buffer"
			],
			[
				"up",
				"update_frequency"
			],
			[
				"crea",
				"createBuffer"
			],
			[
				"quad",
				"quad_mesh"
			],
			[
				"tar",
				"target_texture"
			],
			[
				"wr",
				"wrap_y"
			],
			[
				"wrap",
				"wrap_y"
			],
			[
				"tr",
				"triangle"
			],
			[
				"fl",
				"flat_texture"
			],
			[
				"bind",
				"bind_render_target"
			],
			[
				"R",
				"RenderTarget"
			],
			[
				"load",
				"load_complete"
			],
			[
				"fr",
				"frag_src_bytes"
			],
			[
				"by",
				"bytes_to_string"
			],
			[
				"off",
				"offset"
			],
			[
				"get",
				"getInt32"
			],
			[
				"nm",
				"name_length"
			],
			[
				"shader",
				"shader_name"
			],
			[
				"re",
				"response"
			],
			[
				"sh",
				"shader_name_len"
			],
			[
				"sha",
				"shader_name"
			],
			[
				"name",
				"name_length"
			],
			[
				"nam",
				"name_length"
			],
			[
				"ve",
				"vertex_src_size"
			],
			[
				"l",
				"length_in_bytes"
			],
			[
				"des",
				"dest_file"
			],
			[
				"fragment",
				"fragment_shader_fount"
			],
			[
				"mesh",
				"mesh_files"
			],
			[
				"cr",
				"create_vertex_buffer"
			],
			[
				"u",
				"update_frequency"
			],
			[
				"num",
				"num_attributes"
			],
			[
				"Te",
				"TEXTURE_2D"
			],
			[
				"do",
				"down_filter"
			],
			[
				"wa",
				"wrap_x"
			],
			[
				"w",
				"width"
			],
			[
				"attr",
				"attribute"
			],
			[
				"att",
				"attributes"
			],
			[
				"upda",
				"update_frequency"
			],
			[
				"uni",
				"uniform1f"
			],
			[
				"unif",
				"uniforms"
			],
			[
				"at",
				"attributes"
			],
			[
				"a",
				"a_loc"
			],
			[
				"Ver",
				"VertexBuffer"
			],
			[
				"fun",
				"function"
			],
			[
				"time_",
				"time_elapsed"
			],
			[
				"pos",
				"positions"
			],
			[
				"no",
				"normalized"
			],
			[
				"con",
				"console"
			],
			[
				"v",
				"view_height"
			],
			[
				"f",
				"flat_mat"
			],
			[
				"zone",
				"zone_blend"
			],
			[
				"res",
				"result"
			],
			[
				"zon",
				"zone_blend"
			],
			[
				"fal",
				"fall_speed"
			],
			[
				"set_p",
				"set_parent"
			],
			[
				"par",
				"particle_root"
			],
			[
				"flat",
				"flat_mat"
			],
			[
				"lig",
				"light_dir"
			],
			[
				"n",
				"normalize"
			],
			[
				"set_v",
				"set_vertex_alpha"
			],
			[
				"sunn",
				"sunny_col"
			],
			[
				"pro",
				"progress"
			],
			[
				"pr",
				"progress"
			],
			[
				"clo",
				"clouds"
			],
			[
				"sno",
				"snowy_col"
			],
			[
				"ra",
				"rainy_col"
			],
			[
				"s",
				"sunny_col"
			],
			[
				"ref",
				"refl_cam"
			],
			[
				"refl",
				"refl_cam"
			],
			[
				"gl",
				"gl_FragColor"
			],
			[
				"vi",
				"view_projection"
			],
			[
				"mat",
				"material"
			],
			[
				"co",
				"_color"
			],
			[
				"vec",
				"vec4"
			],
			[
				"M",
				"Material"
			],
			[
				"render",
				"renderer"
			],
			[
				"sce",
				"scene_mat"
			],
			[
				"mar",
				"margin-right"
			],
			[
				"smok",
				"smoke_root"
			],
			[
				"lef",
				"LEFT"
			],
			[
				"sco",
				"score_display"
			],
			[
				"van",
				"van_mesh"
			],
			[
				"fo",
				"fog_color"
			],
			[
				"fog",
				"fog_color"
			],
			[
				"se",
				"set_mat4"
			],
			[
				"round",
				"round_vec3"
			],
			[
				"roun",
				"round_vec2"
			],
			[
				"car",
				"car_reflection"
			],
			[
				"x",
				"x_velocity"
			],
			[
				"car_s",
				"car_spin_rate"
			]
		]
	},
	"buffers":
	[
		{
			"file": "projects/grid/js/grid.js",
			"settings":
			{
				"buffer_size": 5192,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/js/math.js",
			"settings":
			{
				"buffer_size": 1528,
				"line_ending": "Windows"
			}
		},
		{
			"file": "projects/launchvis/js/launchvis.js",
			"settings":
			{
				"buffer_size": 12512,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/js/projections.js",
			"settings":
			{
				"buffer_size": 1746,
				"line_ending": "Windows"
			}
		},
		{
			"file": "lib/js/gl/draw.js",
			"settings":
			{
				"buffer_size": 7383,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "What works well at Parallax? Consider process, documentation, interaction with other parts of the business etc*\n\nThere is little to no red tape. \nPeople are easy to get hold of over Hipchat.\n \n\n\nWhat doesnâ€™t work so well at Parallax?*\n\n- We spend a lot of time redoing work that could be avoided if we had content supplied up front. Perhaps we need to do more to incentivise clients to provide / agree on it. Discounts if they sign off all content before design?\n\n- Responsive and animation/interactions are considered additions or nice-to-haves. They tend to get added late in the process when it is least efficient to do so. A developer asking 'what should happen to this section on mobile' is usually answered with 'didn't have enough time to consider it'. We need to be able to convince clients that it is worth paying for and include it the planning. \n\n- I feel as if sometimes we convince ourselves that our results are better than they are as we know we are limited on time. \n\n- Despite us using Basecamp information on projects can be scattered between Google docs / emails / Slack. Gets harder if working on more than one project at a time. Would be cool to have something that could scrape each of those sources and collate a central repo for it. \n\n\nWhat would you do differently within your role to be more efficient / productive but processes today stop this?*",
			"settings":
			{
				"buffer_size": 1372,
				"line_ending": "Windows",
				"name": "What works well at Parallax? Consider process, doc"
			}
		},
		{
			"contents": "\nBuilding Project: grid\n-------------------------\n\nprojects/grid/js/grid.js\nprojects/grid/js/gblib.js\nlib/js/gb.js\nlib/js/ajax.js\nlib/js/stack.js\nlib/js/time.js\nlib/js/math.js\nlib/js/serialize.js\nlib/js/vector.js\nlib/js/quaternion.js\nlib/js/matrix.js\nlib/js/projections.js\nlib/js/rect.js\nlib/js/aabb.js\nlib/js/ray.js\nlib/js/intersect.js\nlib/js/color.js\nlib/js/input.js\nlib/js/easing.js\nlib/js/animate.js\nlib/js/gl/entity.js\nlib/js/gl/lamp.js\nlib/js/gl/camera.js\nlib/js/gl/scene.js\nlib/js/gl/mesh.js\nlib/js/gl/mesh/quad.js\nlib/js/gl/texture.js\nlib/js/gl/dds.js\nlib/js/gl/shader.js\nlib/js/gl/material.js\nlib/js/gl/rig.js\nlib/js/gl/render_target.js\nlib/js/gl/draw_call.js\nlib/js/gl/webgl.js\nlib/js/gl/asset_group.js\nlib/js/gl/draw.js\nlib/js/debug.js\nlib/js/gl/fps_camera.js\nlib/js/gl/mesh/cube.js\n\nprojects/grid/assets/glsl\\final.glsl\nprojects/grid/assets/glsl\\fxaa.glsl\nprojects/grid/assets/glsl\\surface.glsl\nprojects/grid/assets/glsl\\water.glsl\nprojects/grid/assets/scenes\\construct.scene\n[Finished in 0.1s]",
			"settings":
			{
				"buffer_size": 1007,
				"line_ending": "Windows",
				"name": "Build output",
				"scratch": true
			}
		}
	],
	"build_system": "Packages/User/Shell.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/User/CPP.sublime-build",
					""
				],
				[
					"Packages/User/JS.sublime-build",
					""
				]
			],
			[
				"Packages/User/JS.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/Shell.sublime-build",
					""
				],
				[
					"Packages/User/Shell.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/Shell.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 106.0,
		"last_filter": "Package Control: install",
		"selected_items":
		[
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: dis",
				"Package Control: Disable Package"
			],
			[
				"Package Control:d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			],
			[
				"da",
				"DataConverter: to Python dict"
			],
			[
				"data",
				"DataConverter: to JSON"
			],
			[
				"preyy",
				"Pretty JSON: Minify (compress) JSON"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 456.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/webdev/gblib"
	],
	"file_history":
	[
		"/C/webdev/gblib/lib/js/gl/webgl.js",
		"/C/webdev/gblib/lib/js/gl/mesh.js",
		"/C/webdev/gblib/lib/js/gl/mesh/grid.js",
		"/C/webdev/gblib/projects/launchvis/js/launchvis.js",
		"/C/webdev/gblib/lib/glsl/flat.glsl",
		"/C/webdev/gblib/lib/glsl/surface.glsl",
		"/C/webdev/gblib/build/launchvis/js/launchvis.js",
		"/C/webdev/gblib/lib/js/gl/mesh/quad.js",
		"/C/webdev/gblib/lib/js/gl/draw_call.js",
		"/C/webdev/gblib/lib/js/gl/fps_camera.js",
		"/C/webdev/gblib/tasks/new_project.py",
		"/C/webdev/gblib/projects/grid/js/gblib.js",
		"/C/webdev/gblib/projects/basic/js/gblib.js",
		"/C/webdev/gblib/lib/js/demo.js",
		"/C/webdev/gblib/lib/js/ajax.js",
		"/C/webdev/gblib/projects/basic/js/basic.js",
		"/C/webdev/gblib/tasks/tasks.py",
		"/C/webdev/gblib/build.bat",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/stars.glsl",
		"/C/webdev/gblib/lib/js/debug.js",
		"/C/webdev/gblib/lib/js/gl/draw.js",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/line.glsl",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/grid.glsl",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/land.glsl",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/ocean.glsl",
		"/C/webdev/gblib/lib/js/quaternion.js",
		"/C/archive/winGL/code/core/quat.cpp",
		"/C/IMGL/code/core/quat.cpp",
		"/C/webdev/gblib/lib/glsl/shadow.glsl",
		"/C/webdev/gblib/lib/glsl/specular.glsl",
		"/C/webdev/gblib/lib/js/gl/camera.js",
		"/C/webdev/gblib/lib/js/input.js",
		"/C/webdev/gblib/lib/js/gb.js",
		"/C/webdev/gblib/projects/launchvis/css/style.scss",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/atmosphere.glsl",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/background.glsl",
		"/C/webdev/gblib/lib/js/vector.js",
		"/C/webdev/gblib/lib/js/gl/material.js",
		"/C/webdev/gblib/lib/glsl/fresnel.glsl",
		"/C/webdev/gblib/lib/js/gl/curve.js",
		"/C/webdev/gblib/lib/glsl/curve.glsl",
		"/C/webdev/gblib/lib/glsl/shaping.glsl",
		"/C/webdev/gblib/projects/projection/js/projection.js",
		"/C/webdev/gblib/lib/js/gl/entity.js",
		"/C/webdev/BrakingBadly/onyx/src/shaders/vertex.json",
		"/C/webdev/gblib/lib/glsl/lambert.glsl",
		"/C/webdev/gblib/projects/launchvis/js/gblib.js",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/background",
		"/C/webdev/earth-test/src/shaders/scatter.json",
		"/C/webdev/earth-test/src/shaders/ground.json",
		"/C/webdev/earth-test/src/shaders/fake.json",
		"/C/webdev/gblib/lib/glsl/sdf.glsl",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/sphere.glsl",
		"/C/webdev/gblib/lib/js/random.js",
		"/C/webdev/gblib/lib/glsl/gamma.glsl",
		"/C/webdev/gblib/lib/js/gl/mesh/cube.js",
		"/C/webdev/gblib/lib/js/gl/line_mesh.js",
		"/C/webdev/gblib/lib/js/animate.js",
		"/C/webdev/gblib/lib/js/gl/scene.js",
		"/C/webdev/gblib/projects/basic/assets/glsl/basic.glsl",
		"/C/webdev/gblib/projects/vector/js/vector.js",
		"/C/webdev/launch-data/compile_launch_data.py",
		"/C/webdev/gblib/projects/launchvis/js/lvlib.js",
		"/C/webdev/launch-data/launch_data.py",
		"/C/webdev/gblib/projects/lines/js/lines.js",
		"/C/webdev/gblib/projects/lines/assets/glsl/line.glsl",
		"/C/webdev/gblib/projects/launchvis/assets/glsl/surface.glsl",
		"/C/webdev/gblib/build/projection/js/projection.js",
		"/C/Users/Gareth/Desktop/==Launches==",
		"/C/webdev/gblib/lib/js/gl/asset_group.js",
		"/C/webdev/gblib/tasks/assets.py",
		"/C/webdev/gblib/lib/js/serialize.js",
		"/C/webdev/gblib/projects/vector/js/gblib.js",
		"/C/webdev/gblib/projects/shadows/js/gblib.js",
		"/C/webdev/gblib/projects/shadertoy/js/gblib.js",
		"/C/webdev/gblib/projects/rig/js/gblib.js",
		"/C/webdev/gblib/projects/projection/js/gblib.js",
		"/C/webdev/gblib/projects/lines/js/gblib.js",
		"/C/webdev/launch-data/file_system.py",
		"/C/Users/Gareth/Desktop/launch_data.py",
		"/C/Users/Gareth/Desktop/rockets.py",
		"/C/webdev/gblib/lib/js/projections.js",
		"/C/webdev/gblib/projects/shadertoy/js/shadertoy.js",
		"/C/webdev/gblib/projects/shadertoy/assets/glsl/shapes.glsl",
		"/C/webdev/gblib/lib/glsl/blend_modes.glsl",
		"/C/webdev/gblib/lib/glsl/mat2.glsl",
		"/C/webdev/gblib/lib/glsl/colour_conversion.glsl",
		"/C/webdev/gblib/lib/glsl/yuv.glsl",
		"/C/webdev/gblib/tasks/compile_project.py",
		"/C/webdev/gblib/lib/glsl/signed_distance_fields.glsl",
		"/C/webdev/gblib/projects/shadertoy/assets/glsl/final.glsl",
		"/C/webdev/gblib/projects/shadertoy/assets/glsl/fxaa.glsl",
		"/C/webdev/gblib/projects/shadertoy/assets/glsl/surface.glsl",
		"/C/webdev/gblib/lib/py/io_export_gblib_scene.py",
		"/C/webdev/gblib/lib/js/gblib.js",
		"/C/webdev/gblib/lib/js/easing.js",
		"/C/webdev/BrakingBadly/onyx/src/py/io_export_onyx_json.py",
		"/C/webdev/gblib/lib/js/gl/rig.js",
		"/C/webdev/gblib/projects/rig/js/rig.js",
		"/C/webdev/gblib/lib/glsl/rig.glsl",
		"/C/webdev/gblib/projects/vector/html/index.html",
		"/C/webdev/gblib/projects/shadows/html/index.html",
		"/C/webdev/gblib/projects/rig/html/index.html",
		"/C/webdev/gblib/projects/lines/html/index.html",
		"/C/webdev/gblib/projects/basic/html/index.html",
		"/C/webdev/gblib/projects/projection/html/index.html",
		"/C/webdev/gblib/projects/vector/css/style.scss",
		"/C/webdev/gblib/projects/projection/css/style.scss",
		"/C/webdev/gblib/tasks/html.py",
		"/C/webdev/gblib/lib/css/debug.scss",
		"/C/webdev/logger/console.log",
		"/C/webdev/logger/log.php",
		"/C/webdev/gblib/lib/js/logging.js",
		"/C/webdev/gblib/lib/js/log_redirect.js",
		"/C/Program Files/Blender Foundation/Blender/2.76/scripts/addons/io_scene_fbx/__init__.py",
		"/C/Program Files/Blender Foundation/Blender/2.76/scripts/addons/io_scene_fbx/export_fbx.py",
		"/C/webdev/gblib/projects/projection/assets/glsl/sphere.glsl",
		"/C/webdev/gblib/lib/js/socket.js",
		"/C/webdev/gblib/lib/js/gl/mesh/sphere.js",
		"/C/webdev/gblib/lib/js/gl/mesh_tools.js",
		"/C/webdev/gblib/lib/js/gl/mesh_cube.js",
		"/C/webdev/gblib/lib/js/gl/mesh_sphere.js",
		"/C/webdev/gblib/lib/js/gl/mesh_quad.js",
		"/C/webdev/gblib/tasks/file_system.py",
		"/C/webdev/gblib/projects/vector/assets/glsl/vector.glsl",
		"/C/Program Files/Blender Foundation/Blender/2.76/scripts/addons/io_scene_fbx/import_fbx.py",
		"/C/webdev/gblib/lib/css/style.scss",
		"/C/webdev/gblib/projects/basic/assets/glsl/surface.glsl"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\webdev\\gblib\\src\\js",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"material",
			" )",
			"bool",
			"dFdx",
			"_t",
			"ASSERT",
			"link",
			"shader_types",
			"rig",
			"console",
			"writer",
			"bind_pose",
			"MAX\n",
			"{\n",
			"inverse",
			"compose",
			"print",
			"set_position",
			"6",
			"stride",
			"target",
			"point_t",
			"p2_x",
			"p0_x",
			"s1_y",
			"delta[0] = p.position[0] - e.position[0];\n			delta[1] = p.position[1] - e.position[1];",
			"Vec3",
			"fred",
			"pool",
			"this",
			"m4",
			"m3",
			"v3",
			"v2",
			"this",
			"gb",
			"Mat4",
			".y",
			".x",
			".z",
			".y",
			".x",
			"v[",
			".z",
			".y",
			".x",
			".y",
			".x",
			".w",
			".z",
			".y",
			".x",
			"compose",
			"onyx",
			"renderer",
			"onyx.",
			"write",
			"vertex_buffer",
			"_GL",
			"ctx",
			"_GL",
			"ONYX",
			"\"\n",
			"gl",
			"update_frequency",
			"gl",
			"context",
			"gl",
			"use_mater",
			"set_pixels",
			"quad_mesh",
			"meshtools",
			"VertData",
			"car_body",
			"round_precision",
			"vectors",
			"IndexAttribute",
			"VertexData",
			"VertexAttribute",
			"index_attributes",
			"vertex_attributes",
			"left_controls",
			"left_eye",
			"^(.*)$",
			"TEX_COORD_MAX",
			"0",
			"-2",
			"0",
			"2",
			"0",
			"{",
			"}",
			"{",
			"0.5",
			"f",
			"1.0",
			"0.0",
			"1.0",
			"f",
			")",
			"}",
			"new Vector3f (",
			"new Vector2f (",
			"1.000001",
			"0.999999",
			"0.0",
			"0.000000",
			"1.000000",
			"}",
			"{",
			"-1",
			"0.5",
			"1.0",
			"1.000005",
			"0.999998",
			"-1.0",
			"1.000002",
			"0.577349",
			"Mat4",
			"rhs",
			"m",
			";",
			"c",
			"m",
			"inv_det",
			"m",
			"o",
			"m"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"b32",
			"c[0]",
			"a[0]",
			"lay",
			"stack",
			"_t",
			"[1]",
			"[0]",
			"[2]",
			"[1]",
			"[0]",
			"m[",
			"[2]",
			"[1]",
			"[0]",
			"[1]",
			"[0]",
			"[3]",
			"[2]",
			"[1]",
			"[0]",
			"gb",
			"webgl",
			"gb.",
			"gl",
			"onyx",
			"Onyx",
			"onyx",
			"_GL",
			"update_mode",
			"ctx",
			"context",
			"quad",
			"fp_precision",
			"IndexData",
			"VertData",
			"index_data",
			"vert_data",
			"rift",
			"camera",
			"1",
			"-z",
			"z",
			"-z",
			"z",
			"-z",
			"",
			"z",
			"",
			"1",
			"0",
			"z",
			"",
			"1",
			"0",
			"1",
			"",
			"0",
			"n",
			"1",
			"-1",
			"1",
			"0.5",
			"Mat3",
			"b",
			"a",
			"",
			"m",
			"r.m",
			"d",
			"r.m",
			"m",
			"r.m",
			"d",
			"controls",
			"light",
			"camera",
			"inv_wavelength",
			"ray",
			"start",
			"camera",
			"ATMOSPHERE",
			"AVG_DENSITY",
			"surface",
			"inv_wavelength",
			"AVG_DENSITY",
			"SUN",
			"light_angle",
			"cam_angle",
			"sample_length",
			"ATMOSPHERE",
			"GROUND",
			"sample_ray",
			"start",
			"far",
			"near",
			"ray",
			"P",
			"sample_point",
			"scatter",
			"depth",
			"height",
			"attenuation",
			"light",
			"camera",
			"SAMPLES",
			"light",
			"camera",
			"scale_length",
			"AVG_DENSITY",
			"attenuation",
			"cam_offset",
			"light_scale",
			"cam_scale",
			"light_angle",
			"cam_angle",
			"light",
			"scatter",
			"depth",
			"sample_point",
			"height",
			"det",
			"camera",
			"position",
			"sample_length",
			"sample_ray",
			"ray",
			"start"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "projects/grid/js/grid.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5192,
						"regions":
						{
						},
						"selection":
						[
							[
								4468,
								4468
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2511.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "lib/js/math.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1528,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 144.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "projects/launchvis/js/launchvis.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12512,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 5638.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "lib/js/projections.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1746,
						"regions":
						{
						},
						"selection":
						[
							[
								1737,
								1737
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 240.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "lib/js/gl/draw.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7383,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1152.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 5,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1372,
						"regions":
						{
						},
						"selection":
						[
							[
								1372,
								1372
							]
						],
						"settings":
						{
							"auto_name": "What works well at Parallax? Consider process, doc",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1007,
						"regions":
						{
						},
						"selection":
						[
							[
								1007,
								1007
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 463.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.74963396779,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": false,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/Shell.sublime-build",
	"project": "gb.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"math",
				"lib\\js\\math.js"
			],
			[
				"webgl",
				"lib\\js\\gl\\webgl.js"
			],
			[
				"mesh",
				"lib\\js\\gl\\mesh.js"
			],
			[
				"lau",
				"projects\\launchvis\\js\\launchvis.js"
			],
			[
				"sur",
				"lib\\glsl\\surface.glsl"
			],
			[
				"projec",
				"lib\\js\\projections.js"
			],
			[
				"web",
				"lib\\js\\gl\\webgl.js"
			],
			[
				"draw",
				"lib\\js\\gl\\draw.js"
			],
			[
				"wegbl",
				"lib\\js\\gl\\webgl.js"
			],
			[
				"aj",
				"lib\\js\\ajax.js"
			],
			[
				"grid",
				"projects\\grid\\js\\grid.js"
			],
			[
				"bui",
				"build.bat"
			],
			[
				"task",
				"tasks\\tasks.py"
			],
			[
				"new",
				"tasks\\new_project.py"
			],
			[
				"quat",
				"lib\\js\\quaternion.js"
			],
			[
				"fps",
				"lib\\js\\gl\\fps_camera.js"
			],
			[
				"stars",
				"projects\\launchvis\\assets\\glsl\\stars.glsl"
			],
			[
				"sha",
				"lib\\glsl\\shadow.glsl"
			],
			[
				"camera",
				"lib\\js\\gl\\camera.js"
			],
			[
				"in",
				"lib\\js\\input.js"
			],
			[
				"gb",
				"lib\\js\\gb.js"
			],
			[
				"inp",
				"lib\\js\\input.js"
			],
			[
				"deb",
				"lib\\js\\debug.js"
			],
			[
				"bac",
				"projects\\launchvis\\assets\\glsl\\background.glsl"
			],
			[
				"debug",
				"lib\\js\\debug.js"
			],
			[
				"vec",
				"lib\\js\\vector.js"
			],
			[
				"back",
				"projects\\launchvis\\assets\\glsl\\background.glsl"
			],
			[
				"fes",
				"lib\\glsl\\fresnel.glsl"
			],
			[
				"land",
				"projects\\launchvis\\assets\\glsl\\land.glsl"
			],
			[
				"curv",
				"lib\\js\\gl\\curve.js"
			],
			[
				"shap",
				"lib\\glsl\\shaping.glsl"
			],
			[
				"gldraw",
				"lib\\js\\gl\\draw.js"
			],
			[
				"line",
				"projects\\launchvis\\assets\\glsl\\line.glsl"
			],
			[
				"fres",
				"lib\\glsl\\fresnel.glsl"
			],
			[
				"material",
				"lib\\js\\gl\\material.js"
			],
			[
				"lam",
				"lib\\glsl\\lambert.glsl"
			],
			[
				"star",
				"projects\\launchvis\\assets\\glsl\\stars.glsl"
			],
			[
				"debu",
				"lib\\js\\debug.js"
			],
			[
				"sd",
				"lib\\glsl\\sdf.glsl"
			],
			[
				"materia",
				"lib\\js\\gl\\material.js"
			],
			[
				"sphere",
				"projects\\launchvis\\assets\\glsl\\sphere.glsl"
			],
			[
				"rand",
				"lib\\js\\random.js"
			],
			[
				"gamma",
				"lib\\glsl\\gamma.glsl"
			],
			[
				"lamb",
				"lib\\glsl\\lambert.glsl"
			],
			[
				"surfa",
				"lib\\glsl\\surface.glsl"
			],
			[
				"surf",
				"lib\\glsl\\surface.glsl"
			],
			[
				"mater",
				"lib\\js\\gl\\material.js"
			],
			[
				"sce",
				"lib\\js\\gl\\scene.js"
			],
			[
				"en",
				"lib\\js\\gl\\entity.js"
			],
			[
				"entit",
				"lib\\js\\gl\\entity.js"
			],
			[
				"anim",
				"lib\\js\\animate.js"
			],
			[
				"demo",
				"lib\\js\\demo.js"
			],
			[
				"gb.js",
				"lib\\js\\gb.js"
			],
			[
				"lines",
				"lib\\js\\gl\\line_mesh.js"
			],
			[
				"mat",
				"lib\\js\\gl\\material.js"
			],
			[
				"pro",
				"projects\\projection\\js\\projection.js"
			],
			[
				"sera",
				"lib\\js\\serialize.js"
			],
			[
				"aja",
				"lib\\js\\ajax.js"
			],
			[
				"ass",
				"lib\\js\\gl\\asset_group.js"
			],
			[
				"assets",
				"tasks\\assets.py"
			],
			[
				"la",
				"projects\\launchvis\\js\\launchvis.js"
			],
			[
				"projection",
				"lib\\js\\projections.js"
			],
			[
				"shapes",
				"projects\\shadertoy\\assets\\glsl\\shapes.glsl"
			],
			[
				"sdf",
				"lib\\glsl\\sdf.glsl"
			],
			[
				"shader",
				"projects\\shadertoy\\js\\shadertoy.js"
			],
			[
				"basic",
				"projects\\basic\\js\\basic.js"
			],
			[
				"colour",
				"lib\\glsl\\colour_conversion.glsl"
			],
			[
				"com",
				"tasks\\compile_project.py"
			],
			[
				"bas",
				"projects\\basic\\js\\basic.js"
			],
			[
				"input",
				"lib\\js\\input.js"
			],
			[
				"sc",
				"lib\\js\\gl\\scene.js"
			],
			[
				"io",
				"lib\\py\\io_export_gblib_scene.py"
			],
			[
				"basicgb",
				"projects\\basic\\js\\gblib.js"
			],
			[
				"gbl",
				"lib\\js\\gblib.js"
			],
			[
				"eas",
				"lib\\js\\easing.js"
			],
			[
				"rig",
				"lib\\js\\gl\\rig.js"
			],
			[
				"ew",
				"tasks\\new_project.py"
			],
			[
				"htmlpy",
				"tasks\\html.py"
			],
			[
				"scss",
				"projects\\projection\\css\\style.scss"
			],
			[
				"cur",
				"lib\\js\\gl\\curve.js"
			],
			[
				"lin",
				"lib\\js\\gl\\line_mesh.js"
			],
			[
				"line.gl",
				"projects\\lines\\assets\\glsl\\line.glsl"
			],
			[
				"de",
				"lib\\js\\debug.js"
			],
			[
				"ca",
				"lib\\js\\gl\\fps_camera.js"
			],
			[
				"e",
				"lib\\js\\gl\\entity.js"
			],
			[
				"enti",
				"lib\\js\\gl\\entity.js"
			],
			[
				"came",
				"lib\\js\\gl\\fps_camera.js"
			],
			[
				"cube",
				"lib\\js\\gl\\mesh\\cube.js"
			],
			[
				"spher",
				"lib\\js\\gl\\mesh\\sphere.js"
			],
			[
				"qu",
				"lib\\js\\gl\\mesh\\quad.js"
			],
			[
				"gblib",
				"projects\\rig\\js\\gblib.js"
			],
			[
				"fil",
				"tasks\\file_system.py"
			],
			[
				"compil",
				"tasks\\compile_project.py"
			],
			[
				"ebug",
				"lib\\js\\debug.js"
			],
			[
				"glsl",
				"projects\\basic\\assets\\glsl\\surface.glsl"
			],
			[
				"weg",
				"lib\\js\\gl\\webgl.js"
			],
			[
				"camer",
				"lib\\js\\gl\\camera.js"
			],
			[
				"basi",
				"projects\\basic\\js\\basic.js"
			],
			[
				"css",
				"lib\\css\\style.scss"
			],
			[
				"qua",
				"lib\\js\\quaternion.js"
			],
			[
				"cam",
				"lib\\js\\gl\\camera.js"
			],
			[
				"styl",
				"build\\basic\\css\\style.css"
			],
			[
				"py",
				"tasks\\assets.py"
			],
			[
				"proj",
				"lib\\js\\projections.js"
			],
			[
				"gldr",
				"lib\\js\\gl\\draw.js"
			],
			[
				"pvr",
				"lib\\js\\gl\\pvr.js"
			],
			[
				"te",
				"lib\\js\\gl\\texture.js"
			],
			[
				"dds",
				"lib\\js\\gl\\dds.js"
			],
			[
				"as",
				"lib\\js\\gl\\asset_group.js"
			],
			[
				"lamp",
				"lib\\js\\gl\\lamp.js"
			],
			[
				"ser",
				"lib\\js\\serialize.js"
			],
			[
				"ent",
				"lib\\js\\gl\\entity.js"
			],
			[
				"be",
				"lib\\js\\bezier.js"
			],
			[
				"asse",
				"lib\\js\\gl\\asset_group.js"
			],
			[
				"con",
				"projects\\lines\\config\\config.json"
			],
			[
				"java",
				"tasks\\javascript.py"
			],
			[
				"ja",
				"tasks\\javascript.py"
			],
			[
				"ma",
				"lib\\js\\math.js"
			],
			[
				"ui",
				"build.bat"
			],
			[
				"entity",
				"lib\\js\\gl\\entity.js"
			],
			[
				"materi",
				"lib\\js\\gl\\material.js"
			],
			[
				"gls",
				"projects\\lines\\assets\\glsl\\debug.glsl"
			],
			[
				"we",
				"lib\\js\\gl\\webgl.js"
			],
			[
				"matrix",
				"lib\\js\\matrix.js"
			],
			[
				"mes",
				"lib\\js\\gl\\mesh.js"
			],
			[
				"rig.js",
				"lib\\js\\gl\\rig.js"
			],
			[
				"ri",
				"projects\\rig\\js\\rig.js"
			],
			[
				"i",
				"lib\\py\\io_export_gblib_scene.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\webdev\\minGL\\mingl.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
