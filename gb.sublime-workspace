{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ver",
				"vertex_buffers"
			],
			[
				"fnc",
				"function"
			],
			[
				"vertex",
				"vertex_buffers"
			],
			[
				"out",
				"out_file"
			],
			[
				"fil",
				"file_name"
			],
			[
				"sr",
				"src_dir"
			],
			[
				"src",
				"src_file"
			],
			[
				"read",
				"read_state"
			],
			[
				"bui",
				"build_dir"
			],
			[
				"inc",
				"include_file"
			],
			[
				"set_",
				"set_pixels"
			],
			[
				"p",
				"print_hi"
			],
			[
				"c",
				"container"
			],
			[
				"on",
				"onyx_instance"
			],
			[
				"cons",
				"constructor	keyword"
			],
			[
				"view",
				"view_height"
			],
			[
				"SH",
				"SHADER_SRC"
			],
			[
				"ONYX",
				"ONYX_OUT"
			],
			[
				"ON",
				"ONYX_SRC"
			],
			[
				"nu",
				"number	keyword"
			],
			[
				"Uint",
				"Uint8Array	interface"
			],
			[
				"dest",
				"dest_file"
			],
			[
				"fi",
				"filetype"
			],
			[
				"un",
				"uniforms"
			],
			[
				"tex",
				"texture2"
			],
			[
				"te",
				"texture2D"
			],
			[
				"other_",
				"other_pixels"
			],
			[
				"new",
				"new_texture"
			],
			[
				"sc",
				"scene_material"
			],
			[
				"tim",
				"time_start"
			],
			[
				"ac",
				"active_material"
			],
			[
				"use",
				"use_material"
			],
			[
				"frame",
				"frame_material"
			],
			[
				"set",
				"set_material_texture"
			],
			[
				"fra",
				"frag_src"
			],
			[
				"DE",
				"DEPTH_ATTACHMENT"
			],
			[
				"RB",
				"RGBA"
			],
			[
				"in",
				"index_buffer"
			],
			[
				"index",
				"index_buffer"
			],
			[
				"up",
				"update_frequency"
			],
			[
				"crea",
				"createBuffer"
			],
			[
				"quad",
				"quad_mesh"
			],
			[
				"tar",
				"target_texture"
			],
			[
				"wr",
				"wrap_y"
			],
			[
				"wrap",
				"wrap_y"
			],
			[
				"tr",
				"triangle"
			],
			[
				"fl",
				"flat_texture"
			],
			[
				"bind",
				"bind_render_target"
			],
			[
				"R",
				"RenderTarget"
			],
			[
				"load",
				"load_complete"
			],
			[
				"fr",
				"frag_src_bytes"
			],
			[
				"by",
				"bytes_to_string"
			],
			[
				"off",
				"offset"
			],
			[
				"get",
				"getInt32"
			],
			[
				"nm",
				"name_length"
			],
			[
				"shader",
				"shader_name"
			],
			[
				"re",
				"response"
			],
			[
				"sh",
				"shader_name_len"
			],
			[
				"sha",
				"shader_name"
			],
			[
				"name",
				"name_length"
			],
			[
				"nam",
				"name_length"
			],
			[
				"ve",
				"vertex_src_size"
			],
			[
				"l",
				"length_in_bytes"
			],
			[
				"des",
				"dest_file"
			],
			[
				"fragment",
				"fragment_shader_fount"
			],
			[
				"mesh",
				"mesh_files"
			],
			[
				"cr",
				"create_vertex_buffer"
			],
			[
				"u",
				"update_frequency"
			],
			[
				"num",
				"num_attributes"
			],
			[
				"Te",
				"TEXTURE_2D"
			],
			[
				"do",
				"down_filter"
			],
			[
				"wa",
				"wrap_x"
			],
			[
				"w",
				"width"
			],
			[
				"attr",
				"attribute"
			],
			[
				"att",
				"attributes"
			],
			[
				"upda",
				"update_frequency"
			],
			[
				"uni",
				"uniform1f"
			],
			[
				"unif",
				"uniforms"
			],
			[
				"at",
				"attributes"
			],
			[
				"a",
				"a_loc"
			],
			[
				"Ver",
				"VertexBuffer"
			],
			[
				"fun",
				"function"
			],
			[
				"time_",
				"time_elapsed"
			],
			[
				"pos",
				"positions"
			],
			[
				"no",
				"normalized"
			],
			[
				"con",
				"console"
			],
			[
				"v",
				"view_height"
			],
			[
				"f",
				"flat_mat"
			],
			[
				"zone",
				"zone_blend"
			],
			[
				"res",
				"result"
			],
			[
				"zon",
				"zone_blend"
			],
			[
				"fal",
				"fall_speed"
			],
			[
				"set_p",
				"set_parent"
			],
			[
				"par",
				"particle_root"
			],
			[
				"flat",
				"flat_mat"
			],
			[
				"lig",
				"light_dir"
			],
			[
				"n",
				"normalize"
			],
			[
				"set_v",
				"set_vertex_alpha"
			],
			[
				"sunn",
				"sunny_col"
			],
			[
				"pro",
				"progress"
			],
			[
				"pr",
				"progress"
			],
			[
				"clo",
				"clouds"
			],
			[
				"sno",
				"snowy_col"
			],
			[
				"ra",
				"rainy_col"
			],
			[
				"s",
				"sunny_col"
			],
			[
				"ref",
				"refl_cam"
			],
			[
				"refl",
				"refl_cam"
			],
			[
				"gl",
				"gl_FragColor"
			],
			[
				"vi",
				"view_projection"
			],
			[
				"mat",
				"material"
			],
			[
				"co",
				"_color"
			],
			[
				"vec",
				"vec4"
			],
			[
				"M",
				"Material"
			],
			[
				"render",
				"renderer"
			],
			[
				"sce",
				"scene_mat"
			],
			[
				"mar",
				"margin-right"
			],
			[
				"smok",
				"smoke_root"
			],
			[
				"lef",
				"LEFT"
			],
			[
				"sco",
				"score_display"
			],
			[
				"van",
				"van_mesh"
			],
			[
				"fo",
				"fog_color"
			],
			[
				"fog",
				"fog_color"
			],
			[
				"se",
				"set_mat4"
			],
			[
				"round",
				"round_vec3"
			],
			[
				"roun",
				"round_vec2"
			],
			[
				"car",
				"car_reflection"
			],
			[
				"x",
				"x_velocity"
			],
			[
				"car_s",
				"car_spin_rate"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/js/wgl_dev.js",
			"settings":
			{
				"buffer_size": 3844,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/js/mesh_tools.js",
			"settings":
			{
				"buffer_size": 1487,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/js/asset_group.js",
			"settings":
			{
				"buffer_size": 3079,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/py/resource_compiler.py",
			"settings":
			{
				"buffer_size": 3807,
				"line_ending": "Windows"
			}
		},
		{
			"file": "build/main.js",
			"settings":
			{
				"buffer_size": 79391,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/js/webgl.js",
			"settings":
			{
				"buffer_size": 11649,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/js/texture.js",
			"settings":
			{
				"buffer_size": 3824,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/js/sprite.js",
			"settings":
			{
				"buffer_size": 1689,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/glsl/textured.glsl",
			"settings":
			{
				"buffer_size": 295,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/**\n * @fileoverview dds - Utilities for loading DDS texture files\n * @author Brandon Jones\n * @version 0.1\n */\n\n/*\n * Copyright (c) 2012 Brandon Jones\n *\n * This software is provided 'as-is', without any express or implied\n * warranty. In no event will the authors be held liable for any damages\n * arising from the use of this software.\n *\n * Permission is granted to anyone to use this software for any purpose,\n * including commercial applications, and to alter it and redistribute it\n * freely, subject to the following restrictions:\n *\n *    1. The origin of this software must not be misrepresented; you must not\n *    claim that you wrote the original software. If you use this software\n *    in a product, an acknowledgment in the product documentation would be\n *    appreciated but is not required.\n *\n *    2. Altered source versions must be plainly marked as such, and must not\n *    be misrepresented as being the original software.\n *\n *    3. This notice may not be removed or altered from any source\n *    distribution.\n */\n\n(function(global) {\n\n    \"use strict\";\n    \n    // All values and structures referenced from:\n    // http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n    var DDS_MAGIC = 0x20534444;\n    \n    var DDSD_CAPS = 0x1,\n        DDSD_HEIGHT = 0x2,\n        DDSD_WIDTH = 0x4,\n        DDSD_PITCH = 0x8,\n        DDSD_PIXELFORMAT = 0x1000,\n        DDSD_MIPMAPCOUNT = 0x20000,\n        DDSD_LINEARSIZE = 0x80000,\n        DDSD_DEPTH = 0x800000;\n\n    var DDSCAPS_COMPLEX = 0x8,\n        DDSCAPS_MIPMAP = 0x400000,\n        DDSCAPS_TEXTURE = 0x1000;\n        \n    var DDSCAPS2_CUBEMAP = 0x200,\n        DDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\n        DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\n        DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\n        DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\n        DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\n        DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000,\n        DDSCAPS2_VOLUME = 0x200000;\n\n    var DDPF_ALPHAPIXELS = 0x1,\n        DDPF_ALPHA = 0x2,\n        DDPF_FOURCC = 0x4,\n        DDPF_RGB = 0x40,\n        DDPF_YUV = 0x200,\n        DDPF_LUMINANCE = 0x20000;\n\n    function FourCCToInt32(value) {\n        return value.charCodeAt(0) +\n            (value.charCodeAt(1) << 8) +\n            (value.charCodeAt(2) << 16) +\n            (value.charCodeAt(3) << 24);\n    }\n\n    function Int32ToFourCC(value) {\n        return String.fromCharCode(\n            value & 0xff,\n            (value >> 8) & 0xff,\n            (value >> 16) & 0xff,\n            (value >> 24) & 0xff\n        );\n    }\n\n    var FOURCC_DXT1 = FourCCToInt32(\"DXT1\");\n    var FOURCC_DXT5 = FourCCToInt32(\"DXT5\");\n\n    var headerLengthInt = 31; // The header length in 32 bit ints\n\n    // Offsets into the header array\n    var off_magic = 0;\n\n    var off_size = 1;\n    var off_flags = 2;\n    var off_height = 3;\n    var off_width = 4;\n\n    var off_mipmapCount = 7;\n\n    var off_pfFlags = 20;\n    var off_pfFourCC = 21;\n    \n    // Little reminder for myself where the above values come from\n    /*DDS_PIXELFORMAT {\n        int32 dwSize; // offset: 19\n        int32 dwFlags;\n        char[4] dwFourCC;\n        int32 dwRGBBitCount;\n        int32 dwRBitMask;\n        int32 dwGBitMask;\n        int32 dwBBitMask;\n        int32 dwABitMask; // offset: 26\n    };\n    \n    DDS_HEADER {\n        int32 dwSize; // 1\n        int32 dwFlags; \n        int32 dwHeight;\n        int32 dwWidth;\n        int32 dwPitchOrLinearSize;\n        int32 dwDepth;\n        int32 dwMipMapCount; // offset: 7\n        int32[11] dwReserved1;\n        DDS_PIXELFORMAT ddspf; // offset 19\n        int32 dwCaps; // offset: 27\n        int32 dwCaps2;\n        int32 dwCaps3;\n        int32 dwCaps4;\n        int32 dwReserved2; // offset 31\n    };*/\n\n    /**\n     * Parses a DDS file from the given arrayBuffer and uploads it into the currently bound texture\n     *\n     * @param {WebGLRenderingContext} gl WebGL rendering context\n     * @param {WebGLCompressedTextureS3TC} ext WEBGL_compressed_texture_s3tc extension object\n     * @param {TypedArray} arrayBuffer Array Buffer containing the DDS files data\n     * @param {boolean} [loadMipmaps] If false only the top mipmap level will be loaded, otherwise all available mipmaps will be uploaded\n     *\n     * @returns {number} Number of mipmaps uploaded, 0 if there was an error\n     */\n    var uploadDDSLevels = global.uploadDDSLevels = function (gl, ext, arrayBuffer, loadMipmaps) {\n        var header = new Int32Array(arrayBuffer, 0, headerLengthInt),\n            fourCC, blockBytes, internalFormat,\n            width, height, dataLength, dataOffset,\n            byteArray, mipmapCount, i;\n\n        if(header[off_magic] != DDS_MAGIC) {\n            console.error(\"Invalid magic number in DDS header\");\n            return 0;\n        }\n        \n        if(!header[off_pfFlags] & DDPF_FOURCC) {\n            console.error(\"Unsupported format, must contain a FourCC code\");\n            return 0;\n        }\n\n        fourCC = header[off_pfFourCC];\n        switch(fourCC) {\n            case FOURCC_DXT1:\n                blockBytes = 8;\n                internalFormat = ext.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n                break;\n\n            case FOURCC_DXT5: \n                blockBytes = 16;\n                internalFormat = ext.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n                break;\n\n            default:\n                console.error(\"Unsupported FourCC code:\", Int32ToFourCC(fourCC));\n                return null;\n        }\n\n        mipmapCount = 1;\n        if(header[off_flags] & DDSD_MIPMAPCOUNT && loadMipmaps !== false) {\n            mipmapCount = Math.max(1, header[off_mipmapCount]);\n        }\n\n        width = header[off_width];\n        height = header[off_height];\n        dataOffset = header[off_size] + 4;\n\n        for(i = 0; i < mipmapCount; ++i) {\n            dataLength = Math.max( 4, width )/4 * Math.max( 4, height )/4 * blockBytes;\n            byteArray = new Uint8Array(arrayBuffer, dataOffset, dataLength);\n            gl.compressedTexImage2D(gl.TEXTURE_2D, i, internalFormat, width, height, 0, byteArray);\n            dataOffset += dataLength;\n            width *= 0.5;\n            height *= 0.5;\n        }\n\n        return mipmapCount;\n    }\n\n    /**\n     * Creates a texture from the DDS file at the given URL. Simple shortcut for the most common use case\n     *\n     * @param {WebGLRenderingContext} gl WebGL rendering context\n     * @param {WebGLCompressedTextureS3TC} ext WEBGL_compressed_texture_s3tc extension object\n     * @param {string} src URL to DDS file to be loaded\n     * @param {function} [callback] callback to be fired when the texture has finished loading\n     *\n     * @returns {WebGLTexture} New texture that will receive the DDS image data\n     */\n    global.loadDDSTexture = function(gl, ext, src, callback) {\n        var texture = gl.createTexture(),\n            ddsXhr = new XMLHttpRequest();\n        \n        ddsXhr.open('GET', src, true);\n        ddsXhr.responseType = \"arraybuffer\";\n        ddsXhr.onload = function() {\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            var mipmaps = uploadDDSLevels(gl, ext, this.response);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, mipmaps > 1 ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n            \n            if(callback) {\n                callback(texture);\n            }\n        };\n        ddsXhr.send(null);\n\n        return texture;\n    }\n\n})((typeof(exports) != 'undefined') ? global : window); // Account for CommonJS environments",
			"settings":
			{
				"buffer_size": 7525,
				"line_ending": "Windows",
				"name": "/**"
			}
		},
		{
			"contents": "Reading file: main.js\nReading file: wgl_dev.js\nReading file: gb.js\nReading file: debug.js\nReading file: dom.js\nReading file: stack.js\nReading file: math.js\nReading file: serialize.js\nReading file: vector.js\nReading file: quaternion.js\nReading file: matrix.js\nReading file: rect.js\nReading file: aabb.js\nReading file: ray.js\nReading file: bezier.js\nReading file: intersect.js\nReading file: color.js\nReading file: camera.js\nReading file: time.js\nReading file: scene.js\nReading file: webgl.js\nReading file: mesh.js\nReading file: mesh_tools.js\nReading file: texture.js\nReading file: shader.js\nReading file: render_target.js\nReading file: gl_draw.js\nReading file: audio.js\nReading file: input.js\nReading file: random.js\nReading file: asset_group.js\nReading file: sprite.js\nReading file: animate.js\nCompiled shader: flat\nCompiled shader: shader\nCompiled shader: textured\nCompiled mesh: cube\nCompiled mesh: monkey\nCompiled mesh: prism\nCompiled texture: nutmeg\n[Finished in 0.3s]",
			"settings":
			{
				"buffer_size": 972,
				"line_ending": "Windows",
				"name": "Build output",
				"scratch": true
			}
		}
	],
	"build_system": "Packages/User/JS.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/User/CPP.sublime-build",
					""
				],
				[
					"Packages/User/JS.sublime-build",
					""
				]
			],
			[
				"Packages/User/JS.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 198.0,
		"last_filter": "Package Control: dis",
		"selected_items":
		[
			[
				"Package Control: dis",
				"Package Control: Disable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"Package Control:d",
				"Package Control: Disable Package"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Preferences: Browse Packages"
			],
			[
				"da",
				"DataConverter: to Python dict"
			],
			[
				"data",
				"DataConverter: to JSON"
			],
			[
				"preyy",
				"Pretty JSON: Minify (compress) JSON"
			],
			[
				"",
				"Package Control: Install Package"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: i",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 456.0
	},
	"console":
	{
		"height": 125.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/webdev/gblib"
	],
	"file_history":
	[
		"/C/webdev/gblib/src/glsl/shader.glsl",
		"/C/webdev/gblib/src/glsl/flat.glsl",
		"/C/webdev/gblib/src/js/mesh.js",
		"/C/webdev/gblib/src/js/mesh_tools.js",
		"/C/webdev/gblib/src/js/main.js",
		"/C/webdev/gblib/src/js/asset_group.js",
		"/C/webdev/gblib/src/py/resource_compiler.py",
		"/C/webdev/gblib/src/js/scene.js",
		"/C/webdev/gblib/src/js/camera.js",
		"/C/webdev/gblib/build/index.html",
		"/C/webdev/gblib/src/js/serialize.js",
		"/C/webdev/gblib/src/js/canvas_dev.js",
		"/C/webdev/gblib/src/js/canvas.js",
		"/C/webdev/gblib/build/style.css",
		"/C/webdev/gblib/src/js/input.js",
		"/C/webdev/gblib/src/js/random.js",
		"/C/Parallax/gblib-master/gblib-master/src/js/bezier.js",
		"/C/Parallax/gblib-master/gblib-master/src/js/random.js",
		"/C/Parallax/gblib-master/gblib-master/src/js/input.js",
		"/C/webdev/gblib/src/js/wgl_dev.js",
		"/C/webdev/gblib/src/js/sprite.js",
		"/C/webdev/gblib/build/main.js",
		"/C/webdev/gblib/src/js/gl_draw.js",
		"/C/Users/Gareth/Documents/Visual Studio 2013/Projects/onyx-engine/onyx-engine/onyx-sprite.cpp",
		"/C/Users/Gareth/Documents/Visual Studio 2013/Projects/onyx-engine/onyx-engine/onyx-tween.cpp",
		"/C/webdev/gblib/src/js/rect.js",
		"/C/webdev/gblib/src/js/math.js",
		"/C/webdev/Maze/src/js/math.js",
		"/C/webdev/gblib/src/js/texture.js",
		"/C/webdev/gblib/src/js/webgl.js",
		"/C/webdev/gblib/src/js/matrix.js",
		"/C/webdev/gblib/src/js/dom.js",
		"/C/Users/Gareth/AppData/Roaming/Sublime Text 3/Packages/User/JS.sublime-build",
		"/C/webdev/Maze/src/js/dom.js",
		"/C/webdev/keyboard/index.js",
		"/C/webdev/gblib/src/js/vector.js",
		"/C/webdev/gblib/src/js/stack.js",
		"/C/webdev/gblib/src/js/animate.js",
		"/C/webdev/lerp/tweem.js",
		"/C/webdev/gblib/src/js/bezier.js",
		"/C/Users/Gareth/Documents/Unity/Daylight/Daylight/Assets/FrameWork/Animation/Tween.cs",
		"/C/Users/Gareth/Documents/Visual Studio 2013/Projects/onyx-engine/onyx-engine/onyx-tween.h",
		"/C/webdev/gblib/src/js/intersect.js",
		"/C/winGL/code/vec3.cpp",
		"/C/webdev/gblib/src/js/ray.js",
		"/C/webdev/gblib/src/js/aabb.js",
		"/C/webdev/gblib/src/js/quaternion.js",
		"/C/webdev/gblib/src/js/color.js",
		"/C/webdev/onyx-project/onyx/src/ts/intersect.ts",
		"/C/webdev/gblib/build.sh",
		"/C/webdev/onyx-project/onyx/src/ts/vec3.ts",
		"/C/webdev/gblib/src/js/audio.js",
		"/C/webdev/gblib/.gitignore",
		"/C/webdev/BrakingBadly/onyx/src/ts/aabb.ts",
		"/C/webdev/BrakingBadly/onyx/src/ts/mat4.ts",
		"/C/webdev/gblib/build.bat",
		"/C/webdev/Onyx2/src/js/quaternion.js",
		"/C/webdev/Onyx2/src/js/intersect.js",
		"/C/webdev/Onyx2/src/js/color.js",
		"/C/webdev/Onyx2/src/js/aabb.js",
		"/C/webdev/Onyx2/src/js/ray.js",
		"/C/webdev/Onyx2/src/js/rect.js",
		"/C/webdev/Onyx2/src/js/render_target.js",
		"/C/webdev/Onyx2/src/js/vector.js",
		"/C/webdev/Onyx2/src/js/matrix.js",
		"/C/webdev/Onyx2/src/js/pool.js",
		"/C/webdev/Onyx2/build/onyx.html",
		"/C/webdev/Onyx2/src/js/time.js",
		"/C/webdev/Onyx2/src/js/texture.js",
		"/C/webdev/Onyx2/src/js/serialize.js",
		"/C/webdev/Onyx2/src/js/scene.js",
		"/C/webdev/Onyx2/src/js/random.js",
		"/C/webdev/Onyx2/src/js/mesh_tools.js",
		"/C/webdev/Onyx2/src/js/mesh.js",
		"/C/webdev/Onyx2/src/js/math.js",
		"/C/webdev/Onyx2/src/js/input.js",
		"/C/webdev/Onyx2/src/js/gl_types.js",
		"/C/webdev/Onyx2/src/js/dom.js",
		"/C/webdev/Onyx2/src/js/debug.js",
		"/C/webdev/Onyx2/src/js/camera.js",
		"/C/webdev/Onyx2/src/js/asset_group.js",
		"/C/webdev/Onyx2/build/fft.js",
		"/C/webdev/BrakingBadly/onyx/src/ts/draw.ts",
		"/C/webdev/Onyx2/src/glsl/flat.glsl",
		"/C/webdev/BrakingBadly/onyx/src/ts/mesh.ts",
		"/C/webdev/BrakingBadly/onyx/src/ts/scene.ts",
		"/C/webdev/Onyx2/src/js/shader.js",
		"/C/webdev/Onyx2/src/py/io_export_onyx_json.py",
		"/C/webdev/Onyx2/build/main.js",
		"/C/webdev/Onyx2/src/js/canvas.js",
		"/C/webdev/BrakingBadly/onyx/src/ts/renderer.ts",
		"/C/webdev/Onyx2/build/style.css",
		"/C/webdev/Onyx2/src/js/gb.js",
		"/C/webdev/Onyx2/src/py/resource_compiler.py",
		"/C/webdev/Onyx2/build.py",
		"/C/webdev/Onyx2/build.bat",
		"/C/webdev/Onyx2/src/js/audio.js",
		"/C/webdev/Onyx2/src/js/onyx.js",
		"/C/webdev/Onyx2/src/js/ajax.js",
		"/C/webdev/Onyx2/src/js/webgl.js",
		"/C/webdev/Onyx2/src/js/main.js",
		"/C/webdev/Onyx2/src/js/renderer.js",
		"/C/webdev/Onyx2/src/js/vector3.js",
		"/C/shells/onyx.bat",
		"/C/xampp/apache_start.bat",
		"/C/webdev/Onyx2/build/onyx.js",
		"/C/Users/Gareth/Dropbox/Onyx2/src/py/io_export_onyx_json.py",
		"/C/webdev/Onyx2/src/glsl/shader.glsl",
		"/C/webdev/Onyx2/src/glsl/normals.glsl",
		"/C/webdev/BrakingBadly/onyx/src/py/io_export_onyx_json.py",
		"/C/webdev/BrakingBadly/onyx/src/ts/resources.ts",
		"/C/webdev/BrakingBadly/onyx/src/ts/texture.ts",
		"/C/webdev/BrakingBadly/onyx/src/ts/camera.ts",
		"/C/winGL/code/win32_opengl.cpp",
		"/C/winGL/data/frame.vert",
		"/C/winGL/code/renderer.cpp",
		"/C/webdev/BrakingBadly/onyx/src/ts/render-target.ts",
		"/C/webdev/BrakingBadly/onyx/build/js/main.js",
		"/C/webdev/BrakingBadly/onyx/src/ts/entity.ts",
		"/C/Users/Gareth/Desktop/new.js",
		"/C/webdev/BrakingBadly/onyx/src/ts/onyx.ts",
		"/C/webdev/BrakingBadly/onyx/build/js/onyx.js",
		"/C/webdev/Onyx2/src/js/assets.js",
		"/C/webdev/BrakingBadly/onyx/src/ts/input.ts",
		"/C/webdev/onyx-project/onyx/src/ts/scene.ts",
		"/C/webdev/onyx-project/onyx/src/ts/entity.ts",
		"/C/webdev/Onyx2/src/js/material.js",
		"/C/webdev/Onyx2/src/js/math_types.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"fred",
			"pool",
			"this",
			"m4",
			"m3",
			"v3",
			"v2",
			"this",
			"gb",
			"Mat4",
			".y",
			".x",
			".z",
			".y",
			".x",
			"v[",
			".z",
			".y",
			".x",
			".y",
			".x",
			".w",
			".z",
			".y",
			".x",
			"compose",
			"onyx",
			"renderer",
			"onyx.",
			"write",
			"vertex_buffer",
			"_GL",
			"ctx",
			"_GL",
			"ONYX",
			"\"\n",
			"gl",
			"update_frequency",
			"gl",
			"context",
			"gl",
			"use_mater",
			"set_pixels",
			"quad_mesh",
			"meshtools",
			"VertData",
			"car_body",
			"round_precision",
			"vectors",
			"IndexAttribute",
			"VertexData",
			"VertexAttribute",
			"index_attributes",
			"vertex_attributes",
			"left_controls",
			"left_eye",
			"^(.*)$",
			"TEX_COORD_MAX",
			"0",
			"-2",
			"0",
			"2",
			"0",
			"{",
			"}",
			"{",
			"0.5",
			"f",
			"1.0",
			"0.0",
			"1.0",
			"f",
			")",
			"}",
			"new Vector3f (",
			"new Vector2f (",
			"1.000001",
			"0.999999",
			"0.0",
			"0.000000",
			"1.000000",
			"}",
			"{",
			"-1",
			"0.5",
			"1.0",
			"1.000005",
			"0.999998",
			"-1.0",
			"1.000002",
			"0.577349",
			"Mat4",
			"rhs",
			"m",
			";",
			"c",
			"m",
			"inv_det",
			"m",
			"o",
			"m",
			"inv_det",
			"overlay",
			"v3LightPos",
			"v3CameraPos",
			"v3InvWavelength",
			"v3Ray",
			"v3Start",
			"v3CameraPos",
			"fOuterRadius",
			"fScaleDepth",
			"center",
			"v3InvWaveLength",
			"fScaleDepth",
			"ESun",
			"fLightAngle",
			"fCameraAngle",
			"fSampleLength",
			"fOuterRadius",
			"fInnerRadius",
			"v3sampleRay",
			"v3Start",
			"fFar",
			"fNear",
			"v3Ray",
			"v3Pos",
			"v3SamplePoint",
			"fScatter"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"stack",
			"_t",
			"[1]",
			"[0]",
			"[2]",
			"[1]",
			"[0]",
			"m[",
			"[2]",
			"[1]",
			"[0]",
			"[1]",
			"[0]",
			"[3]",
			"[2]",
			"[1]",
			"[0]",
			"gb",
			"webgl",
			"gb.",
			"gl",
			"onyx",
			"Onyx",
			"onyx",
			"_GL",
			"update_mode",
			"ctx",
			"context",
			"quad",
			"fp_precision",
			"IndexData",
			"VertData",
			"index_data",
			"vert_data",
			"rift",
			"camera",
			"1",
			"-z",
			"z",
			"-z",
			"z",
			"-z",
			"",
			"z",
			"",
			"1",
			"0",
			"z",
			"",
			"1",
			"0",
			"1",
			"",
			"0",
			"n",
			"1",
			"-1",
			"1",
			"0.5",
			"Mat3",
			"b",
			"a",
			"",
			"m",
			"r.m",
			"d",
			"r.m",
			"m",
			"r.m",
			"d",
			"controls",
			"light",
			"camera",
			"inv_wavelength",
			"ray",
			"start",
			"camera",
			"ATMOSPHERE",
			"AVG_DENSITY",
			"surface",
			"inv_wavelength",
			"AVG_DENSITY",
			"SUN",
			"light_angle",
			"cam_angle",
			"sample_length",
			"ATMOSPHERE",
			"GROUND",
			"sample_ray",
			"start",
			"far",
			"near",
			"ray",
			"P",
			"sample_point",
			"scatter",
			"depth",
			"height",
			"attenuation",
			"light",
			"camera",
			"SAMPLES",
			"light",
			"camera",
			"scale_length",
			"AVG_DENSITY",
			"attenuation",
			"cam_offset",
			"light_scale",
			"cam_scale",
			"light_angle",
			"cam_angle",
			"light",
			"scatter",
			"depth",
			"sample_point",
			"height",
			"det",
			"camera",
			"position",
			"sample_length",
			"sample_ray",
			"ray",
			"start",
			"near",
			"far",
			"SAMPLES",
			"depth"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/js/wgl_dev.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3844,
						"regions":
						{
						},
						"selection":
						[
							[
								1972,
								1972
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1732.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/js/mesh_tools.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1487,
						"regions":
						{
						},
						"selection":
						[
							[
								297,
								297
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/js/asset_group.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3079,
						"regions":
						{
						},
						"selection":
						[
							[
								1926,
								1926
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/py/resource_compiler.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3807,
						"regions":
						{
						},
						"selection":
						[
							[
								426,
								426
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "build/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 79391,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 42361.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/js/webgl.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 11649,
						"regions":
						{
						},
						"selection":
						[
							[
								8531,
								8531
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 978.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/js/texture.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3824,
						"regions":
						{
						},
						"selection":
						[
							[
								3304,
								3304
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/js/sprite.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1689,
						"regions":
						{
						},
						"selection":
						[
							[
								1235,
								1235
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 172.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/glsl/textured.glsl",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 295,
						"regions":
						{
						},
						"selection":
						[
							[
								198,
								198
							]
						],
						"settings":
						{
							"syntax": "Packages/Shader Syntax (GLSL HLSL Cg)/OpenGL SL.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 9,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7525,
						"regions":
						{
						},
						"selection":
						[
							[
								2765,
								2774
							]
						],
						"settings":
						{
							"auto_name": "/**",
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 6.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 10,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 972,
						"regions":
						{
						},
						"selection":
						[
							[
								972,
								972
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 363.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.704978038068,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.doc":
	{
		"height": 0.0
	},
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/JS.sublime-build",
	"project": "gb.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"res",
				"src\\py\\resource_compiler.py"
			],
			[
				"shader",
				"src\\glsl\\shader.glsl"
			],
			[
				"gl",
				"src\\glsl\\shader.glsl"
			],
			[
				"flat",
				"src\\glsl\\flat.glsl"
			],
			[
				"mes",
				"src\\js\\mesh_tools.js"
			],
			[
				"ass",
				"src\\js\\asset_group.js"
			],
			[
				"mesh",
				"src\\js\\mesh.js"
			],
			[
				"sc",
				"src\\js\\scene.js"
			],
			[
				"sp",
				"src\\js\\sprite.js"
			],
			[
				"wgl",
				"src\\js\\wgl_dev.js"
			],
			[
				"ca",
				"src\\js\\camera.js"
			],
			[
				"sce",
				"src\\js\\scene.js"
			],
			[
				"spr",
				"src\\js\\sprite.js"
			],
			[
				"ser",
				"src\\js\\serialize.js"
			],
			[
				"html",
				"build\\index.html"
			],
			[
				"text",
				"src\\js\\texture.js"
			],
			[
				"we",
				"src\\js\\webgl.js"
			],
			[
				"in",
				"src\\js\\input.js"
			],
			[
				"css",
				"build\\style.css"
			],
			[
				"ra",
				"src\\js\\random.js"
			],
			[
				"ran",
				"src\\js\\random.js"
			],
			[
				"cn",
				"src\\js\\canvas.js"
			],
			[
				"main",
				"build\\main.js"
			],
			[
				"canvas",
				"src\\js\\canvas.js"
			],
			[
				"camera",
				"src\\js\\camera.js"
			],
			[
				"re",
				"src\\js\\rect.js"
			],
			[
				"ma",
				"src\\js\\math.js"
			],
			[
				"matr",
				"src\\js\\matrix.js"
			],
			[
				"te",
				"src\\js\\texture.js"
			],
			[
				"web",
				"src\\js\\webgl.js"
			],
			[
				"ve",
				"src\\js\\vector.js"
			],
			[
				"st",
				"src\\js\\stack.js"
			],
			[
				"an",
				"src\\js\\animate.js"
			],
			[
				"webgl",
				"src\\js\\webgl.js"
			],
			[
				"cam",
				"src\\js\\camera.js"
			],
			[
				"as",
				"src\\js\\asset_group.js"
			],
			[
				"be",
				"src\\js\\bezier.js"
			],
			[
				"math",
				"src\\js\\math.js"
			],
			[
				"mat",
				"src\\js\\matrix.js"
			],
			[
				"tex",
				"src\\js\\texture.js"
			],
			[
				"aa",
				"src\\js\\aabb.js"
			],
			[
				"qu",
				"src\\js\\quaternion.js"
			],
			[
				"",
				"src\\js\\rect.js"
			],
			[
				"ray",
				"src\\js\\ray.js"
			],
			[
				"colo",
				"src\\js\\color.js"
			],
			[
				"sta",
				"src\\js\\stack.js"
			],
			[
				"vec",
				"src\\js\\vector.js"
			],
			[
				"r",
				"src\\js\\ray.js"
			],
			[
				"rau",
				"src\\js\\audio.js"
			],
			[
				"inter",
				"src\\js\\intersect.js"
			],
			[
				"gi",
				".gitignore"
			],
			[
				"caera",
				"src\\js\\camera.js"
			],
			[
				"matrix",
				"src\\js\\matrix.js"
			],
			[
				"matri",
				"src\\js\\matrix.js"
			],
			[
				"aabb",
				"src\\js\\aabb.js"
			],
			[
				"gl_",
				"src\\js\\gl_draw.js"
			],
			[
				"rand",
				"src\\js\\random.js"
			],
			[
				"b",
				"build.bat"
			],
			[
				"rec",
				"src\\js\\rect.js"
			],
			[
				"po",
				"src\\js\\pool.js"
			],
			[
				"quat",
				"src\\js\\quaternion.js"
			],
			[
				"poo",
				"src\\js\\pool.js"
			],
			[
				"scene",
				"src\\js\\scene.js"
			],
			[
				"coo",
				"src\\js\\color.js"
			],
			[
				"io",
				"src\\py\\io_export_onyx_json.py"
			],
			[
				"sha",
				"src\\js\\shader.js"
			],
			[
				"q",
				"src\\js\\quaternion.js"
			],
			[
				"en",
				"src\\js\\scene.js"
			],
			[
				"mah",
				"src\\js\\math.js"
			],
			[
				"py",
				"src\\py\\io_export_onyx_json.py"
			],
			[
				"tim",
				"src\\js\\time.js"
			],
			[
				"fl",
				"src\\glsl\\flat.glsl"
			],
			[
				"sh",
				"src\\js\\shader.js"
			],
			[
				"color",
				"src\\js\\color.js"
			],
			[
				"dom",
				"src\\js\\dom.js"
			],
			[
				"mai",
				"build\\main.js"
			],
			[
				"bui",
				"build.py"
			],
			[
				"aui",
				"src\\js\\audio.js"
			],
			[
				"gb",
				"src\\js\\gb.js"
			],
			[
				"deb",
				"src\\js\\debug.js"
			],
			[
				"a",
				"src\\js\\ajax.js"
			],
			[
				"i",
				"src\\js\\audio.js"
			],
			[
				"aj",
				"src\\js\\ajax.js"
			],
			[
				"at",
				"src\\js\\matrix.js"
			],
			[
				"col",
				"src\\js\\color.js"
			],
			[
				"v",
				"src\\js\\vector3.js"
			],
			[
				"qua",
				"src\\js\\quaternion.js"
			],
			[
				"debug",
				"src\\js\\debug.js"
			],
			[
				"debu",
				"src\\js\\debug.js"
			],
			[
				"render",
				"src\\js\\renderer.js"
			],
			[
				"on",
				"src\\js\\onyx.js"
			],
			[
				"camer",
				"src\\js\\camera.js"
			],
			[
				"de",
				"src\\js\\debug.js"
			],
			[
				"bu",
				"build.bat"
			],
			[
				"buil",
				"build.py"
			],
			[
				"ren",
				"src\\js\\renderer.js"
			],
			[
				"fla",
				"src\\glsl\\flat.glsl"
			],
			[
				"glg",
				"src\\glsl\\shader.glsl"
			],
			[
				"glsl",
				"src\\glsl\\shader.glsl"
			],
			[
				"glgsl",
				"src\\glsl\\shader.glsl"
			],
			[
				"shad",
				"src\\glsl\\shader.glsl"
			],
			[
				"no",
				"src\\glsl\\normals.glsl"
			],
			[
				"rend",
				"src\\js\\renderer.js"
			],
			[
				"htl",
				"build\\onyx.html"
			],
			[
				"mati",
				"src\\js\\matrix.js"
			],
			[
				".py",
				"src\\py\\resource_compiler.py"
			],
			[
				"atr",
				"src\\js\\matrix.js"
			],
			[
				"inp",
				"src\\js\\input.js"
			],
			[
				"s",
				"build\\style.css"
			],
			[
				"styl",
				"build\\style.css"
			],
			[
				"m",
				"build\\onyx.html"
			],
			[
				"matj",
				"src\\js\\math.js"
			],
			[
				"pool",
				"src\\js\\pool.js"
			],
			[
				"vc",
				"src\\js\\vector3.js"
			],
			[
				"material",
				"src\\js\\material.js"
			],
			[
				"red",
				"src\\js\\render_target.js"
			],
			[
				"mater",
				"src\\js\\material.js"
			],
			[
				"tet",
				"src\\js\\texture.js"
			],
			[
				"materi",
				"src\\js\\material.js"
			],
			[
				"src",
				"src.js"
			],
			[
				"debg",
				"src\\js\\debug.js"
			],
			[
				"sr",
				"src.js"
			],
			[
				"sty",
				"build\\style.css"
			],
			[
				"stly",
				"style.css"
			],
			[
				"style",
				"style.css"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\webdev\\minGL\\mingl.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
